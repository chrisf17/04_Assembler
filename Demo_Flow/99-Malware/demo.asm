section .data
    filename db 'output.txt', 0   ; File name (null-terminated)
    message db 'Hello, I could be doing something malicious!', 0xA  ; Message to write
    msg_len equ $ - message       ; Calculate length of the message

section .bss
    fd resb 4                     ; Reserve space for file descriptor

section .text
    global _start

_start:
    ; sys_open (filename, O_WRONLY | O_CREAT | O_TRUNC, 0644)
    xor eax, eax                  ; Clear eax
    mov eax, 5                    ; sys_open system call number
    mov ebx, filename             ; Filename
    mov ecx, 0x241                ; O_WRONLY | O_CREAT | O_TRUNC (write-only, create, truncate)
    mov edx, 0644                 ; File permissions: 0644 (rw-r--r--)
    int 0x80                      ; Invoke syscall

    ; Check if sys_open failed
    cmp eax, 0                    ; Compare return value with 0
    js .error                      ; If eax < 0 (negative), jump to error handling
    mov [fd], eax                 ; Save file descriptor

    ; sys_write (fd, message, msg_len)
    mov eax, 4                    ; sys_write system call number
    mov ebx, [fd]                 ; File descriptor
    mov ecx, message              ; Message to write
    mov edx, msg_len              ; Length of message
    int 0x80                      ; Invoke syscall

    ; Check if sys_write failed
    cmp eax, 0                    ; Compare return value with 0
    js .error                      ; If eax < 0, jump to error handling

    ; sys_close (fd)
    mov eax, 6                    ; sys_close system call number
    mov ebx, [fd]                 ; File descriptor
    int 0x80                      ; Invoke syscall

    ; sys_exit (status 0)
    mov eax, 1                    ; sys_exit system call number
    xor ebx, ebx                  ; Status 0 (success)
    int 0x80                      ; Exit the program

.error:
    ; sys_exit (status 1) on error
    mov eax, 1                    ; sys_exit system call number
    mov ebx, 1                    ; Status 1 (error)
    int 0x80                      ; Exit the program
